import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.util.HashMap;
import java.util.StringTokenizer;

public class Main {
	static final PrintWriter pw = 
			new PrintWriter(new OutputStreamWriter(System.out), true);
	static final FastReader reader = new FastReader();
	
	public static void main(String[] args){
		int num = reader.nextInt();
		
		for(int i=0;i<num;i++) {
			int n,x;
			
			n = reader.nextInt();
			x = reader.nextInt();
			
			int[] arr = new int[n];
			
			for(int j=0;j<n;j++) {
				arr[j] = reader.nextInt();
			}
			
			long[] maxSumSegmentOfLength = new long[n + 1];
			
			for(int j=1;j<=n;j++) {
				long curr = 0;
				
				for(int a=0;a<j;a++) {
					curr += arr[a];
				}
				
				long max = curr;
				
				for(int a=1;a<=n-j;a++) {
					curr = curr - arr[a - 1] + arr[a + j - 1];
					
					max = Math.max(max, curr);
				}
				
				maxSumSegmentOfLength[j] = max;
			}
			
			//System.out.print("->");
			for(int j=0;j<=n;j++) {
				long max = Long.MIN_VALUE;
				
				for(int length=0;length<=n;length++) {
					long value = maxSumSegmentOfLength[length] +
							Math.min(length, j) * x;
					
					max = Math.max(max, value);
				}
				
				System.out.print(max + " ");
			}
			
			System.out.println();
		}
	}
}

class FastReader {
    BufferedReader br;
    StringTokenizer st;

    public FastReader() {
      br = new BufferedReader(new InputStreamReader(System.in));
    }

    String next() {
      while (st == null || !st.hasMoreElements()) {
        try {
          st = new StringTokenizer(br.readLine());
        } catch (IOException  e) {
          e.printStackTrace();
        }
      }
      return st.nextToken();
    }

    int nextInt() {
      return Integer.parseInt(next());
    }

    long nextLong() {
      return Long.parseLong(next());
    }

    double nextDouble() {
      return Double.parseDouble(next());
    }

    String nextLine() {
      String str = "";
      try {
        str = br.readLine();
      } catch (IOException e)  {
        e.printStackTrace();
      }
      return str;
    }
  }
