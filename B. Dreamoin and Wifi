import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.PriorityQueue;
import java.util.StringTokenizer;

public class Main {
	static final PrintWriter pw = 
			new PrintWriter(new OutputStreamWriter(System.out), true);
	static final FastReader reader = new FastReader();
	
	static int questionMarks = 0;
	
	public static void main(String[] args){
		String s, t;
		
		s = reader.nextLine();
		t = reader.nextLine();
		
		int A = 0, B = 0;
		
		A = get(s);
		B = get(t);
		
		int a = (A - B) + questionMarks;
		
		if(a < 0 || a % 2 == 1) {
			System.out.println(0.0f);
		}
		else {
			a /= 2;
			
			double ans = (double)choose(questionMarks, a) / (1 << questionMarks);
			
			System.out.print(String.format("%.20f", ans));
		}
	}
	
	public static long choose(long total, long choose){
	    if(total < choose)
	        return 0;
	    if(choose == 0 || choose == total)
	        return 1;
	    return choose(total-1,choose-1)+choose(total-1,choose);
	}
	
	public static int get(String s) {
		int ans = 0;
		for(int i=0;i<s.length();i++) {
			if(s.charAt(i) == '+') {
				ans++;
			}
			else if(s.charAt(i) == '-') {
				ans--;
			}
			else if(s.charAt(i) == '?') {
				questionMarks++;
			}
		}
		
		return ans;
	}
}

class FastReader {
    BufferedReader br;
    StringTokenizer st;

    public FastReader() {
      br = new BufferedReader(new InputStreamReader(System.in));
    }

    String next() {
      while (st == null || !st.hasMoreElements()) {
        try {
          st = new StringTokenizer(br.readLine());
        } catch (IOException  e) {
          e.printStackTrace();
        }
      }
      return st.nextToken();
    }

    int nextInt() {
      return Integer.parseInt(next());
    }

    long nextLong() {
      return Long.parseLong(next());
    }

    double nextDouble() {
      return Double.parseDouble(next());
    }

    String nextLine() {
      String str = "";
      try {
        str = br.readLine();
      } catch (IOException e)  {
        e.printStackTrace();
      }
      return str;
    }
  }
